#!/usr/bin/env bash
# -*- coding: utf-8 -*-
#

set -Eeuo pipefail
trap cleanup SIGINT SIGTERM ERR EXIT

VERSION="0.1.0"

NO_COLOR=''
FILE=''
DEBUG=''
RAW='split(".") | .[0],.[1] | @base64d | fromjson'

version() {
  echo "mw-jwq v$VERSION"
}

usage() {
  cat <<EOF

$(version) 

Usage: $(basename "${BASH_SOURCE[0]}") [-V] [-h] [-v] [-c] ( -f FILE | STRING )"
EOF
}

help() {
  cat <<EOF
$(usage)
Wrapper for: ( cat FILE / echo STRING ) | jq -R '${RAW}'

Available options:

-h,  --help           Print this help and exit
-f,  --file FILE      Read JWT from FILE
-c,  --no-color       Disable color output
-v,  --verbose        Print script debug info
-vv, --hyper-verbose  More debug info (set -x)

EOF
}

cleanup() {
  trap - SIGINT SIGTERM ERR EXIT
  # script cleanup here
}

setup_colors() {
  if [[ -t 2 ]] && [[ -z "${NO_COLOR-}" ]] && [[ "${TERM-}" != "dumb" ]]; then
    NOFORMAT='\033[0m' RED='\033[0;31m' GREEN='\033[0;32m' ORANGE='\033[0;33m' BLUE='\033[0;34m' PURPLE='\033[0;35m' CYAN='\033[0;36m' YELLOW='\033[1;33m'
  else
    NOFORMAT='' RED='' GREEN='' ORANGE='' BLUE='' PURPLE='' CYAN='' YELLOW=''
  fi
}

msg() {
  echo >&2 -e "${1-}"
}

die() {
  local msg=$1
  local code=${2-1} # default exit status 1
  msg "$msg"
  exit "$code"
}

parse_params() {
  [[ $# -eq 0 ]] && usage && exit 1

  while :; do
    case "${1-}" in
    -V  | --version) version ; exit 0 ;;
    -h  | --help) help ; exit 0 ;;
    -v  | --verbose) DEBUG=1 ;;               # flags
    -vv | --hyper-verbose) DEBUG=1; set -x ;; 
    -c  | --no-color) NO_COLOR=1 ;;
    -f  | --file)                             # named parameters
      FILE="${2-}"
      [[ -z "$FILE" ]] && die "Missing argument for option '$1'"
      [[ ! -f "$FILE" ]] && die "File '$FILE' does not exist"
      shift
      ;;
    -?*) die "Unknown option: $1" ;;
    *) break ;;
    esac
    shift
  done

  args=("$@")
  STRING=$(IFS= ; echo "${args[*]}")

  [[ -z "$STRING" ]] && [[ -z "$FILE" ]] && usage && die "Missing argument: STRING or FILE"

  return 0
}

parse_params "$@"
setup_colors

# Script
if [ -n "$NO_COLOR" ]; then
  OPTIONS="-M"
else
  OPTIONS="-C"
fi

if [ -n "$FILE" ]; then
  PRINT="cat $FILE"
else
  STRING=$(IFS= ; echo "${args[*]}")
  msg "JWT: '$STRING'"
  PRINT="echo $STRING"
fi

CMD="$PRINT | jq -R '$RAW' $OPTIONS"

if [ -n "${DEBUG}" ]; then
  msg "${GREEN}>>  $CMD${NOFORMAT}"
fi

eval "$CMD"
